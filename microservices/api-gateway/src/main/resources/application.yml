# API Gateway Configuration
spring:
  application:
    name: api-gateway
  
  # Cloud Gateway Configuration
  cloud:
    gateway:
      routes:
        # Auth Service Routes
        - id: auth-service
          uri: http://auth-service:8081
          predicates:
            - Path=/api/auth/**
          filters:
            - StripPrefix=2
        
        # Organization Service Routes
        - id: organization-service
          uri: http://organization-service:8082
          predicates:
            - Path=/api/organization/**
          filters:
            - StripPrefix=2
        
        # Subscriber Service Routes
        - id: subscriber-service
          uri: http://subscriber-service:8083
          predicates:
            - Path=/api/subscriber/**
          filters:
            - StripPrefix=2
        
        # Attendance Service Routes
        - id: attendance-service
          uri: http://attendance-service:8084
          predicates:
            - Path=/api/attendance/**
          filters:
            - StripPrefix=2
        
        # Menu Service Routes
        - id: menu-service
          uri: http://menu-service:8085
          predicates:
            - Path=/api/menu/**
          filters:
            - StripPrefix=2
        
        # Order Service Routes
        - id: order-service
          uri: http://order-service:8086
          predicates:
            - Path=/api/order/**
          filters:
            - StripPrefix=2
        
        # Table Service Routes
        - id: table-service
          uri: http://table-service:8087
          predicates:
            - Path=/api/table/**
          filters:
            - StripPrefix=2
      
      # Global CORS Configuration
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins: "*"
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
            allowedHeaders: "*"
            allowCredentials: false
      
      # Default filters
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
        - AddResponseHeader=X-Response-Default-Foo, Default-Bar

# Server Configuration
server:
  port: ${SERVER_PORT:8080}
  address: 0.0.0.0

# Service Discovery Configuration
service:
  discovery:
    enabled: ${SERVICE_DISCOVERY_ENABLED:true}
    service-name: api-gateway
    service-type: _http._tcp.local.
    port: ${server.port}
    domain: local.
    ttl: 120
    auto-register: true

# Security Configuration
security:
  jwt:
    secret: ${JWT_SECRET:api_gateway_secret_key_2024}
    expiration: 3600000

# Circuit Breaker Configuration
resilience4j:
  circuitbreaker:
    instances:
      default:
        sliding-window-size: 10
        minimum-number-of-calls: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state: 30s
        permitted-number-of-calls-in-half-open-state: 3
  
  retry:
    instances:
      default:
        max-attempts: 3
        wait-duration: 1s
  
  timelimiter:
    instances:
      default:
        timeout-duration: 10s

# Management and Monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,gateway
  endpoint:
    health:
      show-details: when-authorized
    gateway:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
  tracing:
    sampling:
      probability: 0.1
  zipkin:
    tracing:
      endpoint: ${ZIPKIN_ENDPOINT:http://localhost:9411/api/v2/spans}

# Logging Configuration
logging:
  level:
    com.example.attendancesystem.gateway: ${LOG_LEVEL:DEBUG}
    org.springframework.cloud.gateway: INFO
    org.springframework.web: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%logger{36}] - %msg%n"
  file:
    name: logs/api-gateway.log
    max-size: 10MB
    max-history: 30

# Custom Application Properties
app:
  name: "API Gateway"
  version: "1.0.0"
  description: "API Gateway for Microservices"
